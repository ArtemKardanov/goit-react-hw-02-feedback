{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statsitics/Statistics.js","components/Notification/Notification.js","utils/Feedback.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","onLeaveFeedback","options","className","styles","divB","btn","type","onClick","name","GOOD","neutraBtn","NEUTRAL","badBtn","BAD","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Object","freeze","App","state","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","handleFeedbackChanger","e","step","props","target","setState","prevState","this","Feedback","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,6BAA6B,UAAY,8DAA8D,OAAS,6D,yJCc9JC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,4BAAKD,GACJC,I,gBCgCUC,EAlCS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,QAApB,OACtB,yBAAKC,UAAWC,IAAOC,MACrB,4BACEF,UAAWC,IAAOE,IAClBC,KAAK,SACLC,QAASP,EACTQ,KAAMP,EAAQQ,MAJhB,QAQA,4BACEP,UAAWC,IAAOO,UAClBJ,KAAK,SACLC,QAASP,EACTQ,KAAMP,EAAQU,SAJhB,WAQA,4BACET,UAAWC,IAAOS,OAClBN,KAAK,SACLC,QAASP,EACTQ,KAAMP,EAAQY,KAJhB,SCDWC,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,6BACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAvB,OCIWC,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,6BACE,2BAAIA,KCLOC,SAAOC,OAAO,CAC3Bd,KAAM,OACNE,QAAS,UACTE,IAAK,QCIcW,E,2MAKnBC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAGpC,OAJyB,EACjBV,KADiB,EACXC,QADW,EACFC,K,EAMzBU,gCAAkC,WAAO,IAAD,EACP,EAAKF,MAA5BV,EAD8B,EAC9BA,KAGR,OAF0BA,GAAQA,EAFI,EACxBC,QADwB,EACfC,KACoC,KAEjCW,W,EAG5BC,sBAAwB,SAAAC,GAAM,IACpBC,EAAS,EAAKC,MAAdD,KACAvB,EAASsB,EAAEG,OAAXzB,KAER,EAAK0B,UAAS,SAAAC,GAAS,sBAAQ3B,EAAO2B,EAAU3B,GAAQuB,O,wEAGhD,IAAD,EACwBK,KAAKX,MAA5BV,EADD,EACCA,KAAME,EADP,EACOA,IAAKD,EADZ,EACYA,QAEnB,OACE,oCACE,kBAAC,EAAD,CAASnB,MAAM,wBACb,kBAAC,EAAD,CACEG,gBAAiBoC,KAAKP,sBACtB5B,QAASoC,KAGb,kBAAC,EAAD,CAASxC,MAAM,eACVkB,GAAQE,GAAOD,IAChB,kBAAC,EAAD,CACED,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,KAAKV,qBACZP,mBAAoBiB,KAAKT,qCAEvB,kBAAC,EAAD,CAAcN,QAAQ,4B,GApDLiB,aAAZd,EACZe,aAAe,CACpBR,KAAM,GCLVS,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b88a7a9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"divB\":\"FeedbackOptions_divB__1FcAU\",\"btn\":\"FeedbackOptions_btn__1rp9P\",\"neutraBtn\":\"FeedbackOptions_neutraBtn__L7ZPG FeedbackOptions_btn__1rp9P\",\"badBtn\":\"FeedbackOptions_badBtn__XnPu2 FeedbackOptions_btn__1rp9P\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => (\n  <div className={styles.divB}>\n    <button\n      className={styles.btn}\n      type=\"button\"\n      onClick={onLeaveFeedback}\n      name={options.GOOD}\n    >\n      Good\n    </button>\n    <button\n      className={styles.neutraBtn}\n      type=\"button\"\n      onClick={onLeaveFeedback}\n      name={options.NEUTRAL}\n    >\n      Neutral\n    </button>\n    <button\n      className={styles.badBtn}\n      type=\"button\"\n      onClick={onLeaveFeedback}\n      name={options.BAD}\n    >\n      Bad\n    </button>\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.object.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <p>Good: {good}</p>\n    <p>Neutral: {neutral}</p>\n    <p>Bad: {bad}</p>\n    <p>Total: {total}</p>\n    <p>Positive feedback: {positivePercentage}%</p>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <div>\n    <p>{message}</p>\n  </div>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","export default Object.freeze({\n  GOOD: 'good',\n  NEUTRAL: 'neutral',\n  BAD: 'bad',\n});\n","import React, { Component } from 'react';\nimport Section from './Section/Section';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statsitics/Statistics';\nimport Notification from './Notification/Notification';\nimport Feedback from '../utils/Feedback';\n\nexport default class App extends Component {\n  static defaultProps = {\n    step: 1,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    let total = good + neutral + bad;\n\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    let positivePercentage = (good / (good + neutral + bad)) * 100;\n\n    return positivePercentage.toFixed();\n  };\n\n  handleFeedbackChanger = e => {\n    const { step } = this.props;\n    const { name } = e.target;\n\n    this.setState(prevState => ({ [name]: prevState[name] + step }));\n  };\n\n  render() {\n    const { good, bad, neutral } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please live feedback\">\n          <FeedbackOptions\n            onLeaveFeedback={this.handleFeedbackChanger}\n            options={Feedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {((good || bad || neutral) && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )) || <Notification message=\"No feedback given\" />}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}